name: CI

on:
  push:
    branches:
      - master
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - uses: actions/setup-node@v1

      - name: Cache Gradle wrapper and dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches/
            ~/.gradle/wrapper/dists
          key: test-${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle', '**/*.gradle.kts', '**/gradle.properties', 'gradle/**', 'buildSrc/src/main/**') }}
          restore-keys: |
            test-${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: ./gradlew build

      - name: Run app for testing
        run: |
          nohup java -jar service/build/libs/realworld-backend-micronaut-*.jar &
          sleep 5s

      - name: Run postman collection
        run: >
          npx newman run
          https://raw.githubusercontent.com/gothinkster/realworld/master/api/Conduit.postman_collection.json
          --delay-request 200
          --global-var "APIURL=http://localhost:8080/api"
          --global-var "USERNAME=username"
          --global-var "EMAIL=username@example.com"
          --global-var "PASSWORD=password"

      - name: Upload service-jar
        uses: actions/upload-artifact@v2
        with:
          name: service-jar
          path: |
            service/build/libs/realworld-backend-micronaut-*.jar
          retention-days: 7

      - name: Deploy to Heroku
        env:
          HEROKU_API_TOKEN: ${{ secrets.HEROKU_API_TOKEN }}
          HEROKU_APP_NAME: "realworld-backend-micronaut"
        if: github.ref == 'refs/heads/master' && job.status == 'success'
        run: git push https://heroku:$HEROKU_API_TOKEN@git.heroku.com/$HEROKU_APP_NAME.git HEAD:master -f

  graal-8-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup GraalVM CE
        uses: rinx/setup-graalvm-ce@v0.0.5
        with:
          graalvm-version: "21.2.0.1"
          java-version: "java8"
          native-image: "true"

      - uses: actions/setup-node@v1

      - name: Cache Gradle wrapper and dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches/
            ~/.gradle/wrapper/dists
          key: test-${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle', '**/*.gradle.kts', '**/gradle.properties', 'gradle/**', 'buildSrc/src/main/**') }}
          restore-keys: |
            test-${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: ./gradlew build nativeImage -x check

      - name: Upload service-native-linux-8
        uses: actions/upload-artifact@v2
        with:
          name: service-native-linux-8
          path: |
            service/build/native-image/realworld-backend-micronaut-*

      - name: Run app for testing
        run: |
          nohup ./service/build/native-image/realworld-backend-micronaut-* &
          sleep 5s

      - name: Run postman collection
        run: >
          npx newman run
          https://raw.githubusercontent.com/gothinkster/realworld/master/api/Conduit.postman_collection.json
          --delay-request 200
          --global-var "APIURL=http://localhost:8080/api"
          --global-var "USERNAME=username"
          --global-var "EMAIL=username@example.com"
          --global-var "PASSWORD=password"

  graal-8-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - uses: ilammy/msvc-dev-cmd@v1.5.0

      - uses: microsoft/setup-msbuild@v1

#      - name: Setup GraalVM CE
#        uses: rinx/setup-graalvm-ce@v0.0.5
#        with:
#          graalvm-version: "21.2.0.1"
#          java-version: "java8"
#          native-image: "true"

      - uses: ayltai/setup-graalvm@v1
        with:
          java-version: 11
          graalvm-version: 21.2.0.1
          native-image: true

#      - uses: actions/setup-node@v1

      - name: Cache Gradle wrapper and dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches/
            ~/.gradle/wrapper/dists
          key: test-${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle', '**/*.gradle.kts', '**/gradle.properties', 'gradle/**', 'buildSrc/src/main/**') }}
          restore-keys: |
            test-${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: ./gradlew build nativeImage -x check

#      - name: Upload service-native-linux-8
#        uses: actions/upload-artifact@v2
#        with:
#          name: service-native-linux-8
#          path: |
#            service/build/native-image/realworld-backend-micronaut-*
#
#      - name: Run app for testing
#        run: |
#          nohup ./service/build/native-image/realworld-backend-micronaut-* &
#          sleep 5s
#
#      - name: Run postman collection
#        run: >
#          npx newman run
#          https://raw.githubusercontent.com/gothinkster/realworld/master/api/Conduit.postman_collection.json
#          --delay-request 200
#          --global-var "APIURL=http://localhost:8080/api"
#          --global-var "USERNAME=username"
#          --global-var "EMAIL=username@example.com"
#          --global-var "PASSWORD=password"

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Cache Gradle wrapper and dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches/
            ~/.gradle/wrapper/dists
          key: test-${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle', '**/*.gradle.kts', '**/gradle.properties', 'gradle/**', 'buildSrc/src/main/**') }}
          restore-keys: |
            test-${{ runner.os }}-gradle-

      - name: 'Run tests with JaCoCo'
        shell: bash
        run: |
          ./gradlew --version
          ./gradlew --scan --no-parallel --stacktrace --warning-mode=all jacocoReport

      - uses: codecov/codecov-action@v1

  release-notes:
    runs-on: ubuntu-latest
    needs: [build, graal-8-linux]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v1
        with:
          configuration: ".github/release-changelog-builder.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download service-jar
        uses: actions/download-artifact@v2
#        with:
#          name: service-jar

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ steps.github_release.outputs.changelog }}
          draft: true
          files: |
            realworld-backend-micronaut-*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}